apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {


    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
       // exclude 'META-INF/androidx.*'
    }
    compileSdkVersion 30
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "br.radio.DigitalWeb"
        minSdkVersion 14
        targetSdkVersion 30
        multiDexEnabled true
        versionCode 39
        versionName "1.3.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}


dependencies {

    //implementation platform('com.google.firebase:firebase-bom:28.0.1')
    //implementation 'com.google.firebase:firebase-analytics'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.firebase:firebase-database:16.0.4'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
   // def lottieVersion = "4.0.0"
   // implementation "com.airbnb.android:lottie:$lottieVersion"
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    //noinspection GradleCompatible
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    //     exclude group: 'com.android.support', module: 'support-annotations'
    // })

    //noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'
    //implementation 'com.github.lzyzsd:circleprogress:1.2.4'
    //implementation 'com.github.lzyzsd:circleprogress:1.2.0'
    //implementation 'com.android.support:support-v4:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:cardview-v7:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:gridlayout-v7:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    //implementation 'com.google.android.material:material:1.0.0'
    implementation files('libs/easyandroidanimationslibrary-v0.5.jar')
    implementation 'com.google.android.exoplayer:exoplayer:2.8.0'
    // implementation 'com.github.wseemann:FFmpegMediaPlayer:1.0.4'
    // implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever:1.0.14'
    //implementation files('libs/prebuilt-aars.zip')
    //implementation files('libs/prebuilt-aars-with-https.zip')

    // implementation "com.google.android.exoplayer:exoplayer-core:2.10.8"
    // implementation "com.google.android.exoplayer:exoplayer-hls:2.10.8"
    // implementation 'com.android.support:palette-v7:28.0.0'

}

//configurations {
//    implementation {
        //exclude group: 'com.android.support', module: 'support-compat'
       //   exclude group: 'androidx.core', module: 'core'
//    }
//}
// Support legacy language codes
// https://developer.android.com/reference/java/util/Locale#legacy-language-codes
// Credit: https://github.com/TeamAmaze/AmazeFileManager/blob/541c98fc77a9415bcd4a1279b85c6c2d38f669c1/app/build.gradle#L212

task supportLegacyLanguageCodes

[['id', 'in'], ['yi', 'ji'], ['he', 'iw']].forEach { sourceCode, destinationCode ->
    def copyTask = tasks.create('copyStrings' + sourceCode + 'Into' + destinationCode, Copy) {
        description('copying values-' + sourceCode + ' strings into values-' + destinationCode)
        from('src/main/res/values-' + sourceCode)
        into('src/main/res/values-' + destinationCode)
        include('strings.xml')
    }
    supportLegacyLanguageCodes.dependsOn copyTask
}

project.afterEvaluate {
    preBuild.dependsOn supportLegacyLanguageCodes
}

clean.dependsOn supportLegacyLanguageCodes
clean.mustRunAfter supportLegacyLanguageCodes
